@page "/transactions"
@inject PlayerState PlayerState

<body class="bg-gray-950 text-white font-sans scroll-smooth">
    <section class="pt-16 pb-10 bg-gray-900" style="background-image:url('img/header-shape-lobelia.png');">
        <!-- Header -->
        <div class="container mx-auto px-4 max-w-3xl text-center">
            <h3 class="text-3xl md:text-4xl font-extrabold mb-4 tracking-tight">
                <span class="whitespace-nowrap">
                    <span style="-webkit-text-stroke:1px black; color:#EB1026;">T</span>
                    <span style="-webkit-text-stroke:1px black; color:#00B15A;">R</span>
                    <span style="-webkit-text-stroke:1px black; color:#FDAF00;">A</span>
                    <span style="-webkit-text-stroke:1px black; color:#00B4E1;">N</span>
                    <span style="-webkit-text-stroke:1px black; color:#EB1026;">S</span>
                    <span style="-webkit-text-stroke:1px black; color:#00B15A;">A</span>
                    <span style="-webkit-text-stroke:1px black; color:#FDAF00;">C</span>
                    <span style="-webkit-text-stroke:1px black; color:#00B4E1;">T</span>
                    <span style="-webkit-text-stroke:1px black; color:#EB1026;">I</span>
                    <span style="-webkit-text-stroke:1px black; color:#00B15A;">O</span>
                    <span style="color:whitesmoke;">N</span>
                    <span style="color:whitesmoke;">S</span>
                </span>
            </h3>
            <div class="mx-auto mb-6 h-1 w-32 rounded"
                 style="background:linear-gradient(90deg,#EB1026 0 25%,#00B15A 25% 50%,#FDAF00 50% 75%,#00B4E1 75% 100%);">
            </div>
            <p class="text-gray-300 text-sm md:text-base">
                Wallet activity history (live data from PlayerState). Style aligned with Games page.
            </p>
        </div>

        <div class="container mx-auto px-4 max-w-7xl mt-10">
            @if (totalTransactions == 0)
            {
                <div class="text-center py-20 text-gray-400">
                    No transactions yet.
                </div>
            }
            else
            {
                <!-- Summary Tiles -->
                <div class="grid gap-6 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-6 mb-10">
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Total</h4>
                        <div class="text-3xl font-bold mt-2" style="color:#EB1026;">@totalTransactions</div>
                    </div>
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Deposits</h4>
                        <div class="text-3xl font-bold mt-2" style="color:#00B15A;">@_depositCount</div>
                        <div class="text-xs text-gray-400 mt-1">@_depositAmount.ToString("N2")</div>
                    </div>
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Withdrawals</h4>
                        <div class="text-3xl font-bold mt-2 text-red-400">@_withdrawalCount</div>
                        <div class="text-xs text-gray-400 mt-1">@_withdrawalAmount.ToString("N2")</div>
                    </div>
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Game Wins</h4>
                        <div class="text-3xl font-bold mt-2 text-green-400">@_gameWinCount</div>
                        <div class="text-xs text-gray-400 mt-1">@_gameWinAmount.ToString("N2")</div>
                    </div>
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Game Losses</h4>
                        <div class="text-3xl font-bold mt-2 text-red-400">@_gameLossCount</div>
                        <div class="text-xs text-gray-400 mt-1">@_gameLossAmount.ToString("N2")</div>
                    </div>
                    <div class="bg-gray-800 p-5 rounded shadow hover:shadow-xl transition">
                        <h4 class="text-xs font-semibold tracking-wide text-gray-400 uppercase">Net Change</h4>
                        @{
                            var netColor = _netChange >= 0 ? "text-green-400" : "text-red-400";
                        }
                        <div class="text-2xl font-bold mt-2 @netColor">@_netChange.ToString("N2")</div>
                        <div class="text-xs text-gray-400 mt-1">Signed projection</div>
                    </div>
                </div>

                <!-- Pagination / Range Info -->
                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-3 mb-4">
                    <span class="text-sm text-gray-300">
                        Showing @startIndex - @endIndex of @totalTransactions
                    </span>
                    <div class="flex items-center gap-2">
                        <button class="px-3 py-1.5 rounded text-xs font-semibold border border-gray-600
                                           disabled:opacity-40 disabled:cursor-not-allowed
                                           bg-gray-800 hover:bg-gray-700 transition"
                                @onclick="PrevPage" disabled="@isFirstPage">
                            Prev
                        </button>
                        <span class="text-xs text-gray-400 font-semibold">
                            Page @currentPage of @totalPages
                        </span>
                        <button class="px-3 py-1.5 rounded text-xs font-semibold border border-gray-600
                                           disabled:opacity-40 disabled:cursor-not-allowed
                                           bg-gray-800 hover:bg-gray-700 transition"
                                @onclick="NextPage" disabled="@isLastPage">
                            Next
                        </button>
                    </div>
                </div>

                <!-- Transactions Table -->
                <div class="overflow-x-auto rounded border border-gray-700">
                    <table class="min-w-full text-sm">
                        <thead class="bg-gray-700 text-gray-200 uppercase text-xs tracking-wide">
                            <tr>
                                <th class="px-4 py-2 text-left">ID</th>
                                <th class="px-4 py-2 text-left">Type</th>
                                <th class="px-4 py-2 text-right">Amount</th>
                                <th class="px-4 py-2 text-left">Date (UTC)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tx in PagedTransactions)
                            {
                                var (label, css, sign, tagColor) = MapDescription(tx.Description);
                                var signedAmount = sign * tx.Amount;
                                <tr class="odd:bg-gray-800 even:bg-gray-850 hover:bg-gray-700/60 transition">
                                    <td class="px-4 py-2 font-mono text-xs">@tx.TransactionId</td>
                                    <td class="px-4 py-2">
                                        <span class="px-2 py-0.5 rounded text-xs font-semibold @tagColor">@label</span>
                                    </td>
                                    <td class="px-4 py-2 text-right font-semibold">
                                        <span class="@css">
                                            @((sign >= 0 ? "+" : "-") + Math.Abs(signedAmount).ToString("N2")) Ludc
                                        </span>
                                    </td>
                                    <td class="px-4 py-2 text-xs">@tx.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <p class="text-xs text-gray-500 mt-3">
                    NOTE: Net Change uses inferred sign rules by description. Adjust MapDescription() / SignedAmount() for backend semantics.
                </p>
            }
        </div>
    </section>

    <footer class="bg-gray-900 text-center text-xs text-gray-400 py-6">
        &copy; 2025 Ludo Cities Transactions
    </footer>
</body>

@code {
    private int currentPage = 1;
    private int pageSize = 30;

    private List<SharedCode.Constants.WalletTransaction> PagedTransactions = new();

    private int totalTransactions => PlayerState.Player?.Wallet?.Transactions?.Count ?? 0;
    private int totalPages => totalTransactions == 0 ? 1 : (int)Math.Ceiling((double)totalTransactions / pageSize);

    private bool isFirstPage => currentPage == 1;
    private bool isLastPage => currentPage >= totalPages;

    private int startIndex => totalTransactions == 0 ? 0 : ((currentPage - 1) * pageSize) + 1;
    private int endIndex => Math.Min(currentPage * pageSize, totalTransactions);

    // Aggregated stats
    private int _depositCount;
    private int _withdrawalCount;
    private int _gameWinCount;
    private int _gameLossCount;
    private decimal _depositAmount;
    private decimal _withdrawalAmount;
    private decimal _gameWinAmount;
    private decimal _gameLossAmount;
    private decimal _netChange;

    protected override void OnInitialized()
    {
        LoadPage();
        ComputeAggregates();
    }

    private void LoadPage()
    {
        if (PlayerState.Player?.Wallet?.Transactions != null)
        {
            PagedTransactions = PlayerState.Player.Wallet.Transactions
                .OrderByDescending(t => t.CreatedDate)
                .Skip((currentPage - 1) * pageSize)
                .Take(pageSize)
                .ToList();
        }
        else
        {
            PagedTransactions = new();
        }
    }

    private void NextPage()
    {
        if (!isLastPage)
        {
            currentPage++;
            LoadPage();
        }
    }

    private void PrevPage()
    {
        if (!isFirstPage)
        {
            currentPage--;
            LoadPage();
        }
    }

    private void ComputeAggregates()
    {
        var all = PlayerState.Player?.Wallet?.Transactions ?? new List<SharedCode.Constants.WalletTransaction>();

        _depositCount = all.Count(t => t.Description is "On-chain sweep");
        _withdrawalCount = all.Count(t => t.Description is "Withdrawal");
        _gameWinCount = all.Count(t => t.Description is "GameWin");
        _gameLossCount = all.Count(t => t.Description is "GameLoss");

        _depositAmount = all.Where(t => t.Description is "On-chain sweep").Sum(t => t.Amount);
        _withdrawalAmount = all.Where(t => t.Description is "Withdrawal").Sum(t => t.Amount);
        _gameWinAmount = all.Where(t => t.Description is "GameWin").Sum(t => t.Amount);
        _gameLossAmount = all.Where(t => t.Description is "GameLoss").Sum(t => t.Amount);

        _netChange = all.Sum(SignedAmount);
    }

    private decimal SignedAmount(SharedCode.Constants.WalletTransaction tx)
        => tx.Description switch
        {
            "On-chain sweep" => tx.Amount,          // deposit +
            "Withdrawal" => -tx.Amount,            // withdrawal -
            "GameWin" => tx.Amount,                // win +
            "GameLoss" => -tx.Amount,              // loss -
            "Game Fee" => -tx.Amount,              // fee -
            "Game Refund" => tx.Amount,            // refund +
            "Daily Bonus" => tx.Amount,            // bonus +
            _ => tx.Amount                         // default assume +
        };

    // Returns (label, amountCss, sign, tagCss)
    private (string label, string amountCss, int sign, string tagColor) MapDescription(string description)
        => description switch
        {
            "On-chain sweep" => ("Deposit", "text-green-400", +1, "bg-green-600/30 text-green-300"),
            "Withdrawal" => ("Withdrawal", "text-red-400", -1, "bg-red-600/30 text-red-300"),
            "GameWin" => ("Game Win", "text-green-400", +1, "bg-green-600/30 text-green-300"),
            "GameLoss" => ("Game Loss", "text-red-400", -1, "bg-red-600/30 text-red-300"),
            "Game Fee" => ("Game Fee", "text-red-300", -1, "bg-rose-600/30 text-rose-300"),
            "Game Refund" => ("Game Refund", "text-blue-300", +1, "bg-blue-600/30 text-blue-300"),
            "Daily Bonus" => ("Daily Bonus", "text-yellow-300", +1, "bg-yellow-600/30 text-yellow-300"),
            _ => (description, "text-gray-300", +1, "bg-gray-600/30 text-gray-300")
        };
}
@inject PlayerState PlayerState
@page "/deposit"

@inject IJSRuntime JS

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-6">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h4 class="card-title text-center mb-4">DEPOSIT</h4>

                    <!-- Balance Section -->
                    <div class="d-flex align-items-center justify-content-between bg-light rounded p-3 mb-4">
                        <div>
                            <div class="small text-muted">TOTAL BALANCE AVAILABLE</div>
                            <div class="fw-bold">@totalBalance.ToString("0.00")</div>
                        </div>
                        <img src="solicon.webp" alt="Sol Icon" style="width:32px;height:32px;" />
                    </div>

                    <!-- QR and Address Section -->
                    <div class="text-center mb-3">
                        <img src="@QRCodeUrl" alt="QR Code" width="180" height="180" class="rounded mb-2" style="background:#4031af;" />
                    </div>

                    <div class="alert alert-warning text-center py-2 small mb-2">
                        SOL ADDRESS ONLY SEND ON DEVNET
                    </div>

                    <div class="bg-secondary text-white text-center rounded p-2 mb-2" id="depositAddress">
                        @depositAddress
                    </div>
                    <button class="btn btn-warning w-100" @onclick="CopyAddressAsync">COPY</button>
                    @if (copySuccess)
                    {
                        <div class="text-success text-center mt-2">Address copied!</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    
    private decimal totalBalance = 0.0m; // Replace with your real value
    private string depositAddress = ""; // Replace with your actual address
    private string QRCodeUrl => $"https://api.qrserver.com/v1/create-qr-code/?data={depositAddress}&size=180x180";
    private bool copySuccess = false;

    protected override void OnInitialized()
    {
        // Safely check for nulls
        depositAddress = PlayerState.Player?.Wallet?.WalletAddress ?? "";
        totalBalance = PlayerState.Player?.Wallet?.AvailableBalance ?? 0.0m;
    }
    private async Task CopyAddressAsync()
    {
        await JS.InvokeVoidAsync("navigator.clipboard.writeText", depositAddress);
        copySuccess = true;
        StateHasChanged();
        await Task.Delay(1200);
        copySuccess = false;
        StateHasChanged();
    }
}
